{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"1": {
		"prefix": "c++lang",
		"body": [  
		  "#include <bits/stdc++.h>",
		  "#include<ext/pb_ds/assoc_container.hpp>",
		  "#include<ext/pb_ds/tree_policy.hpp>",
		  "using namespace __gnu_pbds;",
		  "using namespace std;",
		  "template <typename T> ",
		  "using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;",
		  "typedef long long ll;", 
		  "typedef pair<int, int> couple;",
		  "#define  str string",
		  "#define  X first",
		  "#define  Y second",
		  "#define  pb push_back", 
		  "#define  all(x) x.begin(),x.end() ",  
		  "#define  testCase int T; input(T);while(T--)",
		  "#define  checkmate return  ",
		  "#define  __stop print('\\n');",
		  "#define Run(i, x, y) for (int _s=x, _e=y, _in=(y>x)?1:-1, i=_s;((_in==1)?(i<=_e):(i>=_e)); i+=_in)", 
		  "template <typename... DataIn> void input(DataIn&... val){(cin >> ... >> val);}",
		  "template <typename... DataOut> void print(const DataOut&... val){((cout << val), ...);} ", 
		  "namespace AN{inline void yes(){cout<<\"YES\\n\";}void no(){cout<<\"NO\\n\";}bool isEven(auto x){return ((x&1)==0);} bool isPlus(auto x){return (x>=0);} ",
    	  "    int len(auto x){return (int)(x).size();} template <typename T> void input(vector<T> &v) { for (auto &c : v) cin >> c; } ",
    	  "    template <typename T> void print(vector<T> v){ for(auto c:v)cout<<c<<\" \";}char ln = '\\n';}",
    	  "using namespace AN;",
		  "", 
		  "int main()",
		  "{",
		  "  /* _Coder   : anmamun0",
		  "     _Created : ${CURRENT_DATE} ${CURRENT_MONTH_NAME} ${CURRENT_YEAR} ||  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
		  "     _File    : ${TM_FILENAME} ", 
		  "    بِسْمِ اللهِ الرَّحْمٰنِ الرَّحِيْمِ */",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "",
		  "    $0",
		  "",
		  "    checkmate 0;",
		  "}",
		],
		"description": ""
	  },
	"3": {
		"prefix": "Node",
		"body": [
		  "class Node",
		  "{",
		  "    public:",
		  "        int val;",
		  "        Node *next;",
		  "",
		  "        Node(int val)",
		  "        {",
		  "            this->val = val;",
		  "            this->next = NULL;",
		  "        }",
		  "};"
		],
		"description": ""
	  }  ,

	  "4": {
		"prefix": "BNode",
		"body": [
		  "class Node",
		  "{",
		  "public:",
		  "    int val;",
		  "    Node *left;",
		  "    Node *right;",
		  "    Node(int val)",
		  "    {",
		  "        this->val = val;",
		  "        this->left = NULL;",
		  "        this->right = NULL;",
		  "    }",
		  "};"
		],
		"description": ""
	  },
	  "5": {
		"prefix": "sloved",
		"body": [
		  "// _Problem Sloved : ${CURRENT_DATE} ${CURRENT_MONTH_NAME} ${CURRENT_YEAR} ||  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
		],
		"description": ""
	  },
	  
}
